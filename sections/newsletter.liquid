{{ 'component-newsletter.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  .close-newsletter-btn svg path {
    stroke: white;
  }
  .error {
    border: 2px solid #ee413d;
  }
  .email-error-message {
    color: #ee413d;
    font-size: 0.9rem;
    margin-top: 5px;
    display: none;
  }
  .email-error-message.active {
    display: block;
  }
{%- endstyle -%}

<div class="newsletter center {% if section.settings.full_width == false %}newsletter--narrow page-width{% endif %} bg-primary-blue">
  <div class="max-w-[1211px]  mx-auto lg:px-12 px-4  newsletter__wrapper color-{{ section.settings.color_scheme }} gradient content-container isolate{% if section.settings.full_width %} content-container--full-width{% endif %} section-{{ section.id }}-padding">
    <div class="grid grid-cols-1 lg:grid-cols-2">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
          {%- when 'heading' -%}
            {%- assign heading = block.settings.heading -%}
            {%- assign typing_text = section.settings.typing_text -%}
            {%- assign text = section.settings.policy_text -%}
            <h2
              class="lg:row-start-1 lg:col-start-1 font-sec text-2xl leading-9 mt-[10px] mb-[10px] text-center lg:text-left  text-white inline-richtext {{ block.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {{ heading }}
            </h2>
            <div class="flex lg:row-start-2 lg:col-start-1 mx-auto lg:mx-0 mb-4 lg:mb-0 max-w-max">
              <p class="typing-text text-xl md:text-3xl font-normal font-sec text-white">
                {{ typing_text }}
              </p>
            </div>
            <div
              class="newsletter-privacy text-center lg:text-left lg:row-start-3 lg:col-start-1 text-xs mt-4 text-white child-underline {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {{ text }}
            </div>
        {%- endcase -%}
      {%- endfor -%}
      <div class="row-start-3 row-end-4 col-start-1 col-end-2 lg:row-start-1 lg:col-start-2 lg:row-end-4 flex items-center">
        {% form 'customer', class: 'newsletter-form' %}
          <input type="hidden" name="contact[tags]" value="newsletter">
          <div
            class="newsletter-form__field-wrapper{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
              style="--animation-order: {{ forloop.index }};"
            {% endif %}
          >
            <div class="field relative field-large max-w-[293px]  lg:max-w-[362px] mr-auto lg:mr-0  ml-auto  lg:ml-auto">
              <input
                id="NewsletterForm--{{ section.id }}"
                type="email"
                name="contact[email]"
                class="field__input"
                value="{{ form.email }}"
                aria-required="true"
                autocorrect="off"
                autocapitalize="off"
                autocomplete="email"
                {% if form.errors %}
                  autofocus
                  aria-invalid="true"
                  aria-describedby="Newsletter-error--{{ section.id }}"
                {% elsif form.posted_successfully? %}
                  aria-describedby="Newsletter-success--{{ section.id }}"
                {% endif %}
                placeholder="{{ 'newsletter.placeholder' | t }}"
                required
              >
              <div class="email-error-message w-full absolute top-[60px] bg-white p-2 text-sm text-primary-blue">
                Please include an '@' in the email address.
              </div>
              <button
                type="submit"
                class="newsletter-form__button field__button"
                name="commit"
                id="Subscribe"
                aria-label="{{ 'newsletter.button_label' | t }}"
              >
                {% render 'icon-arrow-long' %}
              </button>
            </div>
            {%- if form.errors -%}
              <small class="newsletter-form__message form__message" id="Newsletter-error--{{ section.id }}">
                {%- render 'icon-error' -%}
                {{- form.errors.translated_fields.email | capitalize }}
                {{ form.errors.messages.email -}}
              </small>
            {%- endif -%}
          </div>
          {%- if form.posted_successfully? -%}
            <h3
              class="lg:max-w-[362px] max-w-full lg:text-left text-center mt-0 lg:ml-auto ml-0 pl-4 flex lg:justify-start justify-center newsletter-form__message newsletter-form__message--success form__message text-primary-white-cotton h-[20px] w-full  gap-[20px]  [&>svg]:w-5"
              id="Newsletter-success--{{ section.id }}"
              tabindex="-1"
              autofocus
            >
              {{- 'newsletter.success' | t }}
            </h3>
          {%- endif -%}
        {% endform %}
      </div>
    </div>
  </div>
</div>

{% render "newsletter-popup", heading: heading, text: text, typing_text: typing_text  %}

<script defer>
  document.addEventListener('DOMContentLoaded', function () {
    const popup = document.querySelector('#newsletter-popup');
    const closeBtn = document.querySelector('.close-newsletter-btn');
    const form = popup?.querySelector('.newsletter-form');
    const emailInput = form?.querySelector('input[type="email"]');
    const errorMessage = form?.querySelector('.email-error-message');
    const submitButton = form?.querySelector('[type="submit"]');
    const privacyPolicy = form?.closest('.newsletter')?.querySelector('.newsletter-privacy');

    const formContact = document.querySelector('.newsletter-form');
    const emailInputContact = formContact?.querySelector('.newsletter-form__field-wrapper input');
    const errorMessageContact = formContact?.querySelector('.email-error-message');
    const submitButtonContact = formContact?.querySelector('[type="submit"]');
    const privacyPolicyContact = formContact?.closest('.newsletter')?.querySelector('.newsletter-privacy');

    if (popup && !localStorage.getItem('newsletterDismissed')) {
      popup.style.display = 'flex';

      popup.addEventListener('click', function (event) {
        if (event.target === popup) {
          popup.style.display = 'none';
          localStorage.setItem('newsletterDismissed', 'true');
        }
      });
    }

    closeBtn?.addEventListener('click', function () {
      popup.style.display = 'none';
      localStorage.setItem('newsletterDismissed', 'true');
    });

    if (submitButton) {
      submitButton.addEventListener('click', function (event) {
        emailInput.setCustomValidity('');
        errorMessage.style.display = 'none';
        emailInput.classList.remove('field__input--error');
        privacyPolicy?.classList.remove('!mt-20', 'lg:!mt-4');
        const emailValue = emailInput.value;

        if (!emailValue.includes('@')) {
          errorMessage.textContent = `Please include an '@' in the email address`;
          showError(event);
          return;
        }

        const emailParts = emailValue.split('@');
        if (emailParts[1].length === 0) {
          errorMessage.textContent = `The domain part contains invalid format`;
          showError(event);
          return;
        }

        if (!emailParts[1].includes('.')) {
          errorMessage.textContent = `The domain part contains invalid format`;
          showError(event);
          return;
        }

        const domainParts = emailParts[1].split('.');
        if (domainParts.some((part) => part.length === 0)) {
          errorMessage.textContent = `The domain part contains invalid format`;
          showError(event);
          return;
        }

        const nonEnglishRegex = /[^\x00-\x7F]/;
        if (nonEnglishRegex.test(emailValue)) {
          errorMessage.textContent = `Please use only Latin letters in the email address.`;
          showError(event);
          return;
        }

        errorMessage.style.display = 'none';

        setTimeout(() => {
          localStorage.setItem('newsletterDismissed', 'true');
        }, 100);
      });
    }

    if (submitButtonContact) {
      submitButtonContact.addEventListener('click', function (event) {
        emailInputContact.setCustomValidity('');
        errorMessageContact.style.display = 'none';
        emailInputContact.classList.remove('field__input--error');
        privacyPolicyContact?.classList.remove('!mt-20', 'lg:!mt-4');
        const emailValue = emailInputContact.value;

        if (!emailValue.includes('@')) {
          errorMessageContact.textContent = `Please include an '@' in the email address`;
          showError(event);
          return;
        }

        const emailParts = emailValue.split('@');
        if (emailParts[1].length === 0) {
          errorMessageContact.textContent = `The domain part contains invalid format`;
          showError(event);
          return;
        }

        if (!emailParts[1].includes('.')) {
          errorMessageContact.textContent = `The domain part contains invalid format`;
          showError(event);
          return;
        }

        const domainParts = emailParts[1].split('.');
        if (domainParts.some((part) => part.length === 0)) {
          errorMessageContact.textContent = `The domain part contains invalid format`;
          showError(event);
          return;
        }

        const nonEnglishRegex = /[^\x00-\x7F]/;
        if (nonEnglishRegex.test(emailValue)) {
          errorMessageContact.textContent = `Please use only Latin letters in the email address.`;
          showError(event);
          return;
        }

        errorMessageContact.style.display = 'none';
      });
    }

    function showError(event) {
      emailInput.classList.add('field__input--error');
      errorMessage.style.display = 'block';
      privacyPolicy?.classList.add('!mt-20', 'lg:!mt-4');

      emailInputContact.classList.add('field__input--error');
      errorMessageContact.style.display = 'block';
      privacyPolicyContact?.classList.add('!mt-20', 'lg:!mt-4');
      event.preventDefault();
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.newsletter.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header"],
    "templates": ["article", "page"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.newsletter.settings.full_width.label"
    },
    {
      "type": "paragraph",
      "content": "t:sections.newsletter.settings.paragraph.content"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "text",
      "id": "typing_text",
      "label": "Typing text",
      "default": "10% off your first purchase."
    },
    {
      "type": "richtext",
      "id": "policy_text",
      "default": "<p>You can opt out at any time. View the Privacy Policy <a href=\"/pages/privacy-policy\" target=\"_blank\" title=\"Privacy Policy\">here.</a></p>",
      "label": "t:sections.newsletter.blocks.paragraph.settings.paragraph.label"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.newsletter.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Subscribe to our emails",
          "label": "t:sections.newsletter.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "email_form",
      "name": "t:sections.newsletter.blocks.email_form.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ],
  "presets": [
    {
      "name": "t:sections.newsletter.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "email_form"
        }
      ]
    }
  ]
}
{% endschema %}
