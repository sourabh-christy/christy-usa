{% render 'rapid-search-results-template' %}
{% render 'rapid-search-results-template-v2' %}
{% comment %}
    {{ 'template-collection.css' | asset_url | stylesheet_tag }}
    {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
    {{ 'component-card.css' | asset_url | stylesheet_tag }}
    {{ 'component-price.css' | asset_url | stylesheet_tag }}


  {% if section.settings.image_shape == 'blob' %}
    {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- if section.settings.enable_quick_add -%}
    {{ 'quick-add.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
{% endcomment %}

{% liquid
  assign productsPerPage = section.settings.products_per
  assign collectionProducts = collection
  assign hideViewToggle = collection.metafields.custom.hide_view_toggle.value
%}

<style>
  .qt-towel-seo-content-excerpt {
    font-size: inherit;
    font-family: inherit;
    font-weight: inherit;
    display: grid;
    gap: 10px;
  }
  .qt-towel-seo-content-full {
    padding: 1rem 0;

    overflow: hidden;
  }
  .qt-towel-seo-content-full.expanded {
    height: auto;
  }
  .qt-toggle-link {
    color: rgb(44 59 150);
    text-decoration: underline;
    cursor: pointer;
    display: inline-block;
  }
  .qt-seo-towel-excerpt {
    margin: 50px auto;
    display: grid;
    gap: 10px;
    max-width: 1350px;
  }
  #more-content {
    display: inline;
    white-space: normal;
  }
  .less-content {
    text-overflow: ellipsis;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    line-clamp: 2;
    -webkit-box-orient: vertical;
  }
  @media (max-width: 1400px) {
    .qt-seo-towel-excerpt {
      margin: 50px;
    }
  }

  @media (max-width: 768px) {
    .qt-towel-seo-content-title {
      text-align: justify;
    }
    .qt-towel-seo-content-excerpt {
      font-size: inherit;
      font-family: inherit;
      font-weight: inherit;
      text-align: justify;
    }
    .qt-toggle-link {
      text-align: center;
    }
  }
</style>
<div
  id="prodlist"
  data-hidetoggle="{{ hideViewToggle }}"
  class="section-{{ section.id }}-padding group/prodlist [&.list_ul#product-grid>li:nth-child(6n+3)]:col-span-2 [&.list_ul#product-grid>li:nth-child(6n+4)]:col-span-2 "
>
  {%- paginate collection.products by productsPerPage -%}
    <nav id="breadcrumbs" class="breadcrumb container mt-10 max-tab:hidden">
      <ul class="flex flex-wrap text-blue-1 gap-1 items-center">
        {% assign collectionsCount = product.collections.size %}
        <li>
          <a href="{{ shop.url }}" class="text-xs font-normal block">Home</a>
        </li>

        {%- assign parent_collection = collection.metafields.custom.parent_collection.value %}
        {%- if parent_collection != blank %}
          <li>/</li>

          <li>
            <a href="{{ parent_collection.url }}" class="text-xs font-normal block">{{ parent_collection.title }}</a>
          </li>
        {%- endif -%}

        <li>/</li>

        <li class="font-normal last:font-semibold">
          <a href="{{ collection.url }}" class="text-xs block">{{ collection.title }}</a>
        </li>

        {%- for filter in collection.filters -%}
          {% if filter.param_name == 'filter.p.tag' %}
            {%- for value in filter.values -%}
              {% if value.active %}
                <li>/</li>
                <li>
                  <strong class="text-xs font-semibold block">{{ value.label }}</strong>
                </li>
              {% endif %}
            {%- endfor -%}
            {% break %}
          {% endif %}
        {%- endfor %}
      </ul>
    </nav>

    <header class="flex items-center justify-center max-tab:relative max-tab:px-4 max-tab:px-[43px] my-4 container tab:mb-12 tab:mt-8">
      <div class="go-back tab:hidden absolute left-4 top-px">
        <button
          onclick="goBack()"
          class="text-primary-blue text-sm font-normal w-6 rotate-180"
        >
          {% render 'icon-long-arrow-right' %}
        </button>
      </div>

      <div class="flex flex-col items-center space-y-4 text-sm font-normal text-center">
        {% assign alt_title = collection.metafields.custom.alternative_collection_title %}
        {% if alt_title != blank %}
          <h1 class="font-sec d-h5 text-center max-tab:font-sans tab:text-[45px] tab:font-normal tab:leading-[52px]">
            {{ alt_title.value }}
          </h1>
        {% else -%}
          <h1 class="font-sec d-h5 text-center max-tab:font-sans tab:text-[45px] tab:font-normal tab:leading-[52px]">
            {{ collection.title }}
          </h1>
        {% endif %}

        {% if collection.description != blank %}
          <p class="text-sm font-normal text-center">{{ collection.description }}</p>
        {% endif %}
      </div>
    </header>

    {% assign featured_collections = collection.metafields.custom.featured_collections.value %}
    {% if featured_collections != blank %}
      {% render 'featured-collections', collections: featured_collections %}
    {% endif %}

    {% comment %}{% assign has_sub_collections = false %}{% endcomment %}
    {% comment %}{% for block in section.blocks -%}{% endcomment %}
    {% comment %}{% case block.type %}{% endcomment %}
    {% comment %}{% when 'sub_collections' %}{% endcomment %}
    {% comment %}{% if has_sub_collections == false %}{% endcomment %}
    {% comment %}{% assign has_sub_collections = true %}{% endcomment %}
    {% comment %}{% break %}{% endcomment %}
    {% comment %}{% endif %}{% endcomment %}
    {% comment %}{% endcase %}{% endcomment %}
    {% comment %}{% endfor %}{% endcomment %}
    {% comment %}{% endcomment %}
    {% comment %}{% if has_sub_collections %}{% endcomment %}
    {% comment %}{% render 'sub-collection-carousel', blocks: section.blocks %}{% endcomment %}
    {% comment %}{% endif %}{% endcomment %}
    {% comment %}{% endcomment %}

    <div class="container container-sm max-sm:flex-col-reverse max-sm:items-start flex items-center justify-between">
      <div class="product-count-vertical light w-full max-sm:mb-4" role="status">
        <div class="max-md:w-full max-md:pt-1 product-count__text text-sm font-normal font-sans text-secondary-blue-500 flex items-center gap-x-6">
          <span id="ProductCount" class="text-sm font-normal font-sans text-secondary-blue-500">
            {{ collection.products_count }} results
          </span>

          <div class="bg-secondary-blue-50 w-px h-10 max-sm:hidden"></div>

          <div class="flex items-center gap-x-6 select-none max-sm:ml-auto">
            View:

            <input data-view-switch class="absolute invisible peer/first" type="radio" name="view" id="viewFirst" value="first" checked>
            <label class="cursor-pointer peer-checked/first:block hidden" for="viewSecond">
              {% render 'icon-view-2', class: 'w-5 h-5' %}
            </label>
            <input data-view-switch class="absolute invisible peer/second" type="radio" name="view" id="viewSecond" value="second">
            <label class="cursor-pointer peer-checked/second:block hidden" for="viewFirst">
              {% render 'icon-view-1', class: 'w-5 h-5' %}
            </label>
          </div>
        </div>
      </div>

      <div class="flex gap-2 max-sm:my-4 max-mob:w-full max-mob:justify-between">
        {%- if section.settings.enable_sorting -%}
          <facet-filters-form class="facets small-hide">
            <form
              id="FacetFiltersForm"
              class="facets__form"
            >
              <div class="facet-filters sorting caption">
                <div class="facet-filters__field relative w-[175px] h-[48px] px-4 pt-1 border border-secondary-blue-50 cursor-pointer">
                  <label
                    for="SortBy"
                    class="facet-filters__label max-tab:hidden text-[11px] leading-4 font-sans mb-1 text-secondary-blue-400 font-semibold"
                  >
                    {{ 'products.facets.sort_by_label' | t }}
                  </label>

                  <div class="select dropdown-component cursor-pointer">
                    {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                    <select
                      name="sort_by"
                      class="facet-filters__sort select__select cursor-pointer absolute z-20 w-[175px] h-[48px] top-0 left-0 bg-transparent tab:pb-2 tab:pt-5 py-2 px-4 max-tab:text-[11px] text-xs font-semibold appearance-none focus:outline-none"
                      id="SortBy"
                      aria-describedby="a11y-refresh-page-message"
                    >
                      {%- for option in collection.sort_options -%}
                        {%- if option.value == 'manual'
                          or option.value == 'price-ascending'
                          or option.value == 'price-descending'
                          or option.value == 'created-descending'
                        -%}
                          {% case option.value %}
                            {% when 'manual' %}
                              {% assign title = 'Recommended' %}
                            {% when 'price-ascending' %}
                              {% assign title = 'Lowest price' %}
                            {% when 'price-descending' %}
                              {% assign title = 'Highest price' %}
                            {% when 'created-descending' %}
                              {% assign title = 'Newest' %}
                          {% endcase %}
                          <option
                            value="{{ option.value | escape }}"
                            {% if option.value == sort_by %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ title }}
                          </option>
                        {%- endif -%}
                      {%- endfor -%}
                    </select>
                    <span class="absolute z-10 bg-white inset-y-0 right-1.5 flex items-center px-2 rotate-90">
                      {%- render 'icon-arrow' -%}
                    </span>
                  </div>
                </div>

                <noscript>
                  <button type="submit" class="facets__button-no-js button button--secondary">
                    {{ 'products.facets.sort_button' | t }}
                  </button>
                </noscript>
              </div>
            </form>
          </facet-filters-form>
        {% endif %}

        {% render 'facets-drawer',
          results: collection,
          enable_filtering: section.settings.enable_filtering,
          enable_sorting: section.settings.enable_sorting,
          filter_type: section.settings.filter_type,
          paginate: paginate
        %}
      </div>
    </div>
    {%- if collection.products.size > 0 -%}
      <aside
        aria-labelledby="verticalTitle"
        class="relative max-md:overflow-hidden md:overflow-x-clip"
        id="main-collection-filters"
        data-id="{{ section.id }}"
      >
        {% render 'facets',
          results_request: request,
          results: collection,
          enable_filtering: section.settings.enable_filtering,
          enable_sorting: section.settings.enable_sorting,
          filter_type: section.settings.filter_type,
          paginate: paginate,
          collection_list: collection.metafields.custom.children_collections,
          has_sub_collections: has_sub_collections
        %}
      </aside>
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {% endif %}

    <div class="container container-sm active-facets active-facets-mobile flex items-start max-tab:space-y-4 max-tab:flex-col tab:items-center tab:flex-wrap">
      {% liquid
        assign sort_by = collection.sort_by | default: collection.default_sort_by
        if collection.url
        assign results_url = collection.url
        else
        assign terms = collection.terms | escape
        assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
        endif
      %}
      <div class="active-facets-list flex gap-1.5 tab:flex-wrap items-center max-tab:pb-1.5 max-tab:w-full max-tab:overflow-auto max-tab:no-scrollbar tab:mr-10">
        {%- assign has_active_filters = false -%}
        {%- for filter in collection.filters -%}
          {%- if filter.type == 'price_range' -%}
            {%- if filter.min_value.value != null or filter.max_value.value != null -%}
              {%- assign has_active_filters = true -%}
              <div class="flex items-center py-2.5 px-4 bg-primary-white-cotton">
                <span class="mr-2.5 text-sm font-normal w-max">
                  {%- assign min_value = filter.min_value.value | default: 0 -%}
                  {%- assign max_value = filter.max_value.value | default: filter.range_max -%}
                  {{ min_value | money }} - {{ max_value | money }}
                </span>
                <a href="{{ filter.url_to_remove }}" class="w-6 h-6 flex items-center justify-center">
                  {% render 'icon-close' %}
                </a>
              </div>
            {%- endif -%}
          {%- else -%}
            {%- for filter_value in filter.active_values -%}
              {%- assign has_active_filters = true -%}
              <div class="flex items-center py-2.5 px-4 bg-primary-white-cotton">
                <span class="mr-2.5 text-sm font-normal w-max">{{ filter_value.label }}</span>
                <a href="{{ filter_value.url_to_remove }}" class="w-6 h-6 flex items-center justify-center">
                  {% render 'icon-close' %}
                </a>
              </div>
            {%- endfor -%}
          {%- endif -%}
        {%- endfor -%}
      </div>

      {%- if has_active_filters -%}
        <facet-remove class="active-facets__button-wrapper max-md:!mb-6 tab:py-2">
          <a href="{{ results_url }}" class="active-facets__button-remove underline text-sm font-semibold w-max">
            Clear all
          </a>
        </facet-remove>
      {%- endif -%}
    </div>

    <div class="">
      <div
        class="product-grid-container md:mt-6"
        id="ProductGridContainer"
      >
        {%- if collection.products.size == 0 -%}
          <div
            class="collection collection--empty container container-sm [&.loading]:opacity-50  transition-opacity"
            id="product-grid"
            data-id="{{ section.id }}"
            data-view="first"
          >
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="m-h2 d-h2">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underline'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div id="collection-products" class="collection container container-sm [&.loading]:opacity-50  transition-opacity max-md:mb-6">
            <div class="loading-overlay gradient"></div>

            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              data-view="first"
              class="grid gap-x-4 data-[view=first]:grid-cols-1 data-[view=second]:grid-cols-2
              sm:data-[view=first]:grid-cols-2 sm:data-[view=second]:grid-cols-3
              lg:data-[view=first]:grid-cols-3 lg:data-[view=second]:grid-cols-4 sm:gap-x-0.5 gap-y-6 grid-flow-dense"
            >
              {% assign listscIndex = 0 %}
              {% assign listscCount = 0 %}
              {% assign pagOffset = paginate.current_page | times: productsPerPage %}

              {% assign pagOffset = pagOffset | minus: productsPerPage %}

              {% assign infoCardCount = 0 %}

              {%- for product in collection.products -%}
                {% if product.handle contains 'docapp-free-gift-' %}{% continue %}{% endif %}

                {% if product.type == 'giftbox_ghost_product' %}{% continue %}{% endif %}
                {% assign mainLoopIndexOffset = forloop.index0 | plus: pagOffset %}
                {% assign productInd = forloop.index0 %}
                {% assign colSpanSet = false %}

                {% assign lazy_load = false %}
                {%- if forloop.index > 4 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}

                {% capture prodBlocks %}
                  {% for block in section.blocks -%}
                    {% case block.type %}
                      {% when 'listsc' %}
                        {% if productInd == 1 or productInd == 2 %}
                          {% if forloop.index > listscIndex %}
                            {% render 'product-list-showcase',
                              block: block,
                              bgImage: block.settings.image,
                              product_1: block.settings.product_1,
                              pos_l_1: block.settings.pos_l_1,
                              pos_t_1: block.settings.pos_t_1,
                              product_2: block.settings.product_2,
                              pos_l_2: block.settings.pos_l_2,
                              pos_t_2: block.settings.pos_t_2,
                              product_3: block.settings.product_3,
                              pos_l_3: block.settings.pos_l_3,
                              pos_t_3: block.settings.pos_t_3,
                              availableProds: collectionProducts
                            %}
                            {% assign listscIndex = forloop.index %}
                            {% assign colSpanSet = true %}
                            {% assign listscCount = listscCount | plus: 1%}
                          {% endif %}
                        {% endif %}
                    {% when 'infocard' %}
                      {% assign position = block.settings.position | minus: 2 %}
                      {% if position == mainLoopIndexOffset %}
                        <li
                          class=" max-md:py-6 max-md:col-span-2 view-grid-only {% if infoCardCount == 0 %}max-md:row-start-3{% endif %} {% if infoCardCount == 1 %}max-md:hidden{% endif %}"
                          {{ block.shopify_attributes }}
                        >
                          {% render 'card-info',
                            title: block.settings.text,
                            copy: block.settings.copy,
                            button_text: block.settings.button_text,
                            button_url: block.settings.button_url,
                            styled: block.settings.styled
                          %}
                        </li>
                        {% assign infoCardCount = infoCardCount | plus: 1 %}
                      {% endif %}
                  {% endcase %}
                {% endfor %}
                {% endcapture %}

                {% if collection.metafields.custom.collection_banner_first != blank %}
                  {%- for collection_banner_first in collection.metafields.custom.collection_banner_first.value -%}
                    {% assign position = collection_banner_first.list_position | minus: 1 %}
                  {%- endfor -%}

                  {% if position == mainLoopIndexOffset %}
                    <li
                      class="{% unless request.design_mode %}animate-fadeinup{% endunless %}  grid__item group-[.list]/prodlist:max-sm:col-span-full collection-banner"
                    >
                      <div
                        class="splide group/splide splide-collection-banner h-full w-full flex flex-col"
                        data-splide='
                          {"arrows": true, "pagination": false, "type": "fade", "gap": "0", "autoWidth": false, "breakpoints": {
                            "768": {
                              "gap": "0"
                            }
                          }}
                        '
                      >
                        <div class="splide__track !overflow-visible bg-primary-white-cotton h-full z-10">
                          <div class="splide__list text-blue-1 flex group-[.is-initialized]/splide:!block">
                            {%- for collection_banner_first in collection.metafields.custom.collection_banner_first.value -%}
                              <div class="splide__slide !transition-none !translate-x-0 h-full">
                                {% render 'card-banner',
                                  media: collection_banner_first.media,
                                  title: collection_banner_first.title,
                                  subtitle: collection_banner_first.subtitle,
                                  title_font_size: collection_banner_first.title_font_size,
                                  subtitle_font_size: collection_banner_first.subtitle_font_size,
                                  alignment: collection_banner_first.alignment,
                                  text_colour: collection_banner_first.text_color,
                                  button_text: collection_banner_first.button_text,
                                  button_url: collection_banner_first.button_link,
                                  btn_colour: collection_banner_first.button_color,
                                  collection_banner_number: 'first'
                                %}
                              </div>
                            {%- endfor -%}
                          </div>
                        </div>
                        <div class="splide__arrows hidden"></div>
                        {% if collection.metafields.custom.collection_banner_first.value.count > 1 %}
                          <div class="container px-0 mt-4 space-y-3 w-full">
                            <!-- progress bar -->
                            <div class="bg-secondary-blue-100 slider-progress h-px flex items-center">
                              <div
                                class="bg-secondary-blue-600 h-px transition-all w-0 lg:h-0.5 slider-progress-bar"
                              ></div>
                            </div>
                            <!-- arrows -->
                            <div class="splide__arrows splide__arrows--ltr hidden group-[.is-initialized]/splide:!flex justify-between items-center">
                              <button
                                class="
                                  splide__arrow splide__arrow--prev disabled:!text-secondary-blue-200 transition-colors !bg-transparent
                                  !static !transform-none outline-none
                                "
                                type="button"
                                aria-label="Previous slide"
                                aria-controls="splide01-track"
                              >
                                {%- render 'icon-long-arrow-right', class: '!w-6 !h-6' -%}
                              </button>
                              <!-- counter -->
                              <div class="text-xs">
                                <span
                                  data-splide-current-page
                                  class="data-[splide-is-last-page=true]:text-secondary-blue-200"
                                  >1</span
                                >
                                /
                                <span data-splide-total-pages class="text-secondary-blue-200"></span>
                              </div>
                              <button
                                class="
                                  splide__arrow splide__arrow--next disabled:!text-secondary-blue-200 transition-colors
                                  !bg-transparent !static !transform-none outline-none
                                "
                                type="button"
                                aria-label="Next slide"
                                aria-controls="splide01-track"
                              >
                                {%- render 'icon-long-arrow-right', class: '!w-6 !h-6' -%}
                              </button>
                            </div>
                          </div>
                        {% endif %}
                      </div>
                    </li>
                    {% assign infoCardCount = infoCardCount | plus: 1 %}
                  {% endif %}
                {% endif %}

                {% if collection.metafields.custom.collection_banner_second != blank %}
                  {%- for collection_banner_second in collection.metafields.custom.collection_banner_second.value -%}
                    {% assign position = collection_banner_second.list_position | minus: 1 %}
                  {%- endfor -%}

                  {% if position == mainLoopIndexOffset %}
                    <li
                      class="{% unless request.design_mode %}animate-fadeinup{% endunless %} grid__item group-[.list]/prodlist:max-sm:col-span-full collection-banner"
                    >
                      <div
                        class="splide group/splide splide-collection-banner h-full w-full flex flex-col"
                        data-splide='
                          {"arrows": true, "pagination": false, "type": "fade", "gap": "0", "autoWidth": false, "breakpoints": {
                            "768": {
                              "gap": "0"
                            }
                          }}
                        '
                      >
                        <div class="splide__track !overflow-visible bg-primary-white-cotton h-full z-10">
                          <div class="splide__list text-blue-1 flex group-[.is-initialized]/splide:!block">
                            {%- for collection_banner_second in collection.metafields.custom.collection_banner_second.value -%}
                              <div class="splide__slide !transition-none !translate-x-0 h-full w-full">
                                {% render 'card-banner',
                                  media: collection_banner_second.media,
                                  title: collection_banner_second.title,
                                  subtitle: collection_banner_second.subtitle,
                                  title_font_size: collection_banner_second.title_font_size,
                                  subtitle_font_size: collection_banner_second.subtitle_font_size,
                                  alignment: collection_banner_second.alignment,
                                  text_colour: collection_banner_second.text_color,
                                  button_text: collection_banner_second.button_text,
                                  button_url: collection_banner_second.button_link,
                                  btn_colour: collection_banner_second.button_color,
                                  collection_banner_number: 'second'
                                %}
                              </div>
                            {%- endfor -%}
                          </div>
                        </div>
                        <div class="splide__arrows hidden"></div>
                        {% if collection.metafields.custom.collection_banner_second.value.count > 1 %}
                          <div class="container px-0 mt-4 space-y-3 w-full">
                            <!-- progress bar -->
                            <div class="bg-secondary-blue-100 slider-progress h-px flex items-center">
                              <div
                                class="bg-secondary-blue-600 h-px transition-all w-0 lg:h-0.5 slider-progress-bar"
                              ></div>
                            </div>
                            <!-- arrows -->
                            <div class="splide__arrows splide__arrows--ltr hidden group-[.is-initialized]/splide:!flex justify-between items-center">
                              <button
                                class="
                                  splide__arrow splide__arrow--prev disabled:!text-secondary-blue-200 transition-colors !bg-transparent
                                  !static !transform-none outline-none
                                "
                                type="button"
                                aria-label="Previous slide"
                                aria-controls="splide01-track"
                              >
                                {%- render 'icon-long-arrow-right', class: '!w-6 !h-6' -%}
                              </button>
                              <!-- counter -->
                              <div class="text-xs">
                                <span
                                  data-splide-current-page
                                  class="data-[splide-is-last-page=true]:text-secondary-blue-200"
                                  >1</span
                                >
                                /
                                <span data-splide-total-pages class="text-secondary-blue-200"></span>
                              </div>
                              <button
                                class="
                                  splide__arrow splide__arrow--next disabled:!text-secondary-blue-200 transition-colors
                                  !bg-transparent !static !transform-none outline-none
                                "
                                type="button"
                                aria-label="Next slide"
                                aria-controls="splide01-track"
                              >
                                {%- render 'icon-long-arrow-right', class: '!w-6 !h-6' -%}
                              </button>
                            </div>
                          </div>
                        {% endif %}
                      </div>
                    </li>
                    {% assign infoCardCount = infoCardCount | plus: 1 %}
                  {% endif %}
                {% endif %}

                {% assign prodClass = '' %}

                <li
                  class="grid__item {{ prodClass }} group-[.list]/prodlist:max-sm:col-span-full"
                >
                  {% render 'card-product',
                    dragable: true,
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    show_quick_add: section.settings.enable_quick_add,
                    section_id: section.id
                  %}
                </li>

                {{ prodBlocks }}
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > paginate.current_page -%}
              <button
                class="flex space-x-2 items-center my-10 lg:my-20 mx-auto [&.loading>div]:!block"
                onclick="loadMoreProducts(this)"
                id="show-more"
                data-page="{{ paginate.current_page | plus: 1 }}"
              >
                <span class="btn-tertiary">Show More</span> {% render 'more-chev-down' %}

                <div class="loading-overlay__spinner hidden">
                  <svg
                    aria-hidden="true"
                    focusable="false"
                    class="spinner"
                    viewBox="0 0 66 66"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <circle class="path !stroke-current" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                  </svg>
                </div>
              </button>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}
</div>

<script>
  function initReviews() {
    /*
    if (ratingSnippet !== undefined)
      ratingSnippet('ruk_rating_snippet', {
        store: 'www.christy.co.uk',
        mode: 'default',
        color: '#2c3b96',
        linebreak: false,
        text: 'Reviews',
        singularText: 'Review',
        lang: 'en',
        usePolaris: true,
        showEmptyStars: false,
      });
    */
  }

  const initViewSelector = () => {
    const LOCAL_STORAGE_KEY = 'collectionGridView';
    let productGrid = document.querySelector('#product-grid');
    if (!productGrid) return

    productGrid.dataset.view = localStorage?.getItem(LOCAL_STORAGE_KEY) ?? 'first';
    window.dispatchEvent(new CustomEvent('product-splider-refresh'))

    document.querySelectorAll('[data-view-switch]').forEach((el) => {
      if (el.classList.contains('is-initialized')) return;
      el.checked = el.value === (localStorage?.getItem(LOCAL_STORAGE_KEY) ?? 'first');

      el.addEventListener('change', debounce((e) => {
        productGrid = document.querySelector('#product-grid');
        if (!productGrid) return
        if (e.target.checked) {
          productGrid.dataset.view = e.target.value
          console.log(e.target.value)

          localStorage.setItem(LOCAL_STORAGE_KEY, e.target.value)

          window.dispatchEvent(new CustomEvent('product-splider-refresh'))
        }
      }, 300));

      el.classList.add('is-initialized')
    });
  }

  function sectionProductGridInit() {
    // view toggle

    // if local storage has product list set, show list view
    const prodList = document.querySelector('#prodlist');
    const viewToggle = document.querySelector('#view-toggle');
    const viewToggleMob = document.querySelector('#view-toggle-mob');
    const FacetFiltersForm = document.querySelector('#FacetFiltersForm');

    const prodlistView = localStorage.getItem('prodlistView');
    if (prodlistView == 'true' && prodlist.dataset.hidetoggle != 'true') {
      viewToggle.classList.add('list');
      viewToggleMob.classList.add('list');
      prodList.classList.add('list');

      document.querySelector('[name="view"][value="list"]').checked = true;

      document
        .getElementById('ProductGridContainer')
        .querySelectorAll('.view-grid-only')
        .forEach((element) => {
          element.remove();
        });
    } else {
      document
        .getElementById('ProductGridContainer')
        .querySelectorAll('.view-list-only')
        .forEach((element) => {
          element.remove();
        });
    }

    function viewToggleHandler() {
      let checkedView = document.querySelector('[name="view"]:checked').value;

      if (checkedView == 'list') {
        localStorage.setItem('prodlistView', true);
        viewToggle.classList.add('list');
        viewToggleMob.classList.add('list');
      } else {
        localStorage.setItem('prodlistView', false);
        viewToggle.classList.remove('list');
        viewToggleMob.classList.remove('list');
      }
    }
    FacetFiltersForm.addEventListener('input', function () {
      viewToggleHandler();
    });

    if (viewToggleMob) {
      viewToggleMob.querySelectorAll('label').forEach(function (el) {
        el.addEventListener('click', function () {
          let forName = el.getAttribute('for');
          console.log(document.getElementById(forName));
          document.getElementById(forName).click();
        });
      });
    }

    document.querySelectorAll('[name="shop_by"]').forEach(function (el) {
      el.addEventListener('change', function () {
        el.closest('.shop_by').classList.remove('tag', 'collection', 'default');
        el.closest('.shop_by').classList.add(el.value);

        let checks = document.querySelectorAll('[name="filter.p.product_type"], [name="filter.p.tag"]');
        checks.forEach(function (check) {
          check.checked = false;
        });
      });
    });
  }

  function changeListImgSrcset() {
    let els = document.querySelectorAll(
      '#prodlist.list #product-grid>li:nth-child(6n+3),#prodlist.list #product-grid>li:nth-child(6n+4), #prodlist.list #product-grid>li:nth-child(6n+4)'
    );

    if (els.length) {
      els.forEach(function (el) {
        let imgs = el.querySelectorAll('.card__inner > a > img');
        if (imgs.length) {
          imgs.forEach(function (img, i) {
            img.setAttribute('sizes', '(max-width: 1023px) 50vw, (min-width: 1024px) 668px, 100vw');

            if (i == 0) {
              img.style.objectFit = 'cover';
            }
          });
        }
      });
    }
  }

  
  function updateMargin() {
    const facetsList = document.querySelector(".active-facets-list");
    const facetsMobile = document.querySelector(".active-facets-mobile");
    const collectionBanner = document.querySelectorAll(".collection-banner");
  
    if (facetsList && facetsMobile) {
      if (facetsList.children.length === 0) {
        facetsMobile.style.marginTop = "0px";
      } else {
        facetsMobile.style.marginTop = "10px";
      }

      collectionBanner.forEach(banner =>  {
        if (facetsList.children.length === 0) {
          banner.classList.remove('hidden')
        } else {
          banner.classList.add('hidden')
        }
      })
    }
  }

  function observeFacetsList() {
    const facetsList = document.querySelector(".active-facets-list");
    
    if (facetsList) {
      const observer = new MutationObserver(updateMargin);
      observer.observe(facetsList, { childList: true });
    }
  }

  document.addEventListener("DOMContentLoaded", function () {
    updateMargin();
    observeFacetsList();
  });

  document.addEventListener("shopify-facets:container-rendered", function () {
    updateMargin();
    observeFacetsList();
  });
  
  document.addEventListener('DOMContentLoaded', function () {
    sectionProductGridInit();

    const filtersMob = document.querySelector('#filters-mob');
    const menuDrawer = document.querySelector('#prodlist menu-drawer summary');

    filtersMob.addEventListener('click', function (e) {
      e.preventDefault();
      menuDrawer.click();
      console.log('view filter');
    });

    initViewSelector();
  });

  let showMoreBtn = document.querySelector('#show-more');
  const observerLoadMore = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        loadMoreProducts(entry.target);
      }
    });
  });

  if (showMoreBtn) {
    observerLoadMore.observe(showMoreBtn);
  }

  document.addEventListener('shopify-facets:container-rendered', function () {
    if (showMoreBtn) {
      observerLoadMore.unobserve(showMoreBtn);
    }
    showMoreBtn = document.querySelector('#show-more');
    if (showMoreBtn) {
      observerLoadMore.observe(showMoreBtn);
    }

    initViewSelector();
  });

  function loadMoreProducts(el) {
    const productListing = document.getElementById('product-grid');

    if (el.disabled) return;
    el.classList.add('loading');
    el.disabled = true;

    const requestUrl = new URL(window.location.href);
    requestUrl.searchParams.set('page', el.dataset.page);

    //history.pushState(requestUrl, '', requestUrl);
    fetch(requestUrl)
      .then((response) => response.text())
      .then(function (responseText) {
        const html = new DOMParser().parseFromString(responseText, 'text/html');
        const productHtml = html?.querySelector('#product-grid');
        if (productHtml && productHtml.querySelectorAll('.grid__item').length > 0) {
          productListing.insertAdjacentHTML('beforeend', productHtml.innerHTML);

          // lazy load
          const lazyimg = new Event('lazyimg');
          window.dispatchEvent(lazyimg);

          // reinit colour selectors
          const initcolourselector = new Event('initcolourselector');
          window.dispatchEvent(initcolourselector);

          // Refresh wishlist buttons
          const wishlistRefresh = new Event('shopify-wishlist:setup-buttons');
          document.dispatchEvent(wishlistRefresh);

          el.classList.remove('loading');
        }

        if (html?.querySelector('#show-more')) {
          el.dataset.page = html.querySelector('#show-more').dataset.page;
          el.disabled = false;
        } else {
          el.remove();
        }

        initReviews();
      })
      .catch(function (error) {
        console.error('Error loading products:', error);
      });
  }
</script>

{% comment %}QT 29-10-2024{% endcomment %}

{% if collection.metafields.custom.seo_content_excerpt or collection.metafields.custom.seo_content_full %}
  <div class="qt-seo-towel-excerpt">
    {% if collection.metafields.custom.seo_content_excerpt %}
      <h1 class="s-m-h4 lg:s-d-h3 qt-towel-seo-content-title">{{ collection.title }}</h1>
      {% assign excerpt = collection.metafields.custom.seo_content_excerpt | metafield_tag %}

      <h2 class="qt-towel-seo-content-excerpt">
        {% if excerpt.size > 630 %}
          <div id="less-content" style="display:block;">{{ excerpt }}</div>
          <div id="more-content" style="display:none;">{{ excerpt }}</div>
          <div id="toggle-link" class="qt-toggle-link"><a href="javascript:void(0);">Read more </a> ...</div>
        {% else %}
          {{ excerpt }}
        {% endif %}
      </h2>
    {% endif %}

    {% if collection.metafields.custom.seo_content_full %}
      <div class="qt-towel-seo-content-full" id="full-content" style="display: none;">
        {{ collection.metafields.custom.seo_content_full | metafield_tag }}
      </div>
    {% endif %}
  </div>
{% endif %}

<script>
  function truncateRichText(element, maxLength) {
    console.log('element', element);
    if (!element) return;
    let currentLength = 0;
    let isTruncated = false;

    for (let i = 0; i < element.childNodes.length; i++) {
      var node = element.childNodes[i];
      var length = currentLength + node.textContent.length;
      if (isTruncated) {
        node.textContent = '';
        continue;
      }
      if (length > maxLength) {
        const truncatedText = node.textContent.substring(0, maxLength - currentLength) + '...';
        node.textContent = truncatedText;
        isTruncated = true;
        continue; // Stop iterating
      } else {
        currentLength += node.textContent.length;
      }
    }

    if (!isTruncated && currentLength > maxLength) {
      // If the entire text is too long, truncate the last text node
      const lastTextNode = element.childNodes[element.childNodes.length - 1];
      lastTextNode.textContent = lastTextNode.textContent.substring(0, maxLength - currentLength) + '...';
    }
  }
  document.addEventListener('DOMContentLoaded', function () {
    const toggleLink = document.getElementById('toggle-link');
    const moreContent = document.getElementById('more-content');
    const lessContent = document.getElementById('less-content');
    if (!toggleLink || !moreContent || !lessContent) return;
    truncateRichText(document.getElementById('less-content').childNodes[0], 630);
    toggleLink.addEventListener('click', function () {
      const isHidden = moreContent.style.display === 'none';
      lessContent.style.display = isHidden ? 'none' : 'block';
      moreContent.style.display = isHidden ? 'block' : 'none';
      toggleLink.textContent = isHidden ? 'Read less' : 'Read more...';
    });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('open_filters')) {
      const filterSidebar = document.querySelector('.mobile-facets__disclosure');

      filterSidebar.classList.add('menu-opening');
      filterSidebar.setAttribute('open', 'open');
      console.log('open 111');
    }
    const filterLabel = urlParams.get('open_filters');
    const specificFilter = document.querySelector(`details[data-filter-label="${filterLabel}"]`);
    if (specificFilter) {
      specificFilter.classList.add('menu-opening');
      specificFilter.setAttribute('open', 'open');
      console.log('open 222');
    }
  });
</script>

<script src="{{ 'back-button.js' | asset_url }}" defer></script>

{% schema %}
{
  "name": "Products",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per",
      "min": 4,
      "max": 24,
      "step": 1,
      "label": "Products Per Page",
      "default": 12
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    }
  ],

  "blocks": [
    {
      "type": "sub_collections",
      "name": "Sub Col. Carousel Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "sub_title",
          "label": "Sub Title"
        },
        {
          "type": "richtext",
          "id": "copy",
          "label": "Copy"
        },

        {
          "type": "url",
          "id": "button_url",
          "label": "Button URL"
        }
      ]
    },
    {
      "type": "infocard",
      "name": "GRID - Product Info Card",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "copy",
          "label": "Copy"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "Button URL"
        },
        {
          "type": "checkbox",
          "id": "styled",
          "label": "Styled Heading"
        },
        {
          "type": "number",
          "id": "position",
          "label": "List Position"
        }
      ]
    },
    {
      "type": "listsc",
      "name": "LIST - Showcase",
      "limit": 2,
      "settings": [
        {
          "type": "header",
          "content": "An image, with product hotspots."
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Showcase Background Image",
          "info": "This image sits behind overlaid Product Hotspots"
        },
        {
          "type": "header",
          "content": "Product 1"
        },
        {
          "type": "product",
          "id": "product_1",
          "label": "Product 1",
          "info": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_l_1",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Left",
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_t_1",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Top",
          "default": 50
        },
        {
          "type": "header",
          "content": "Product 2"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "Product 2",
          "info": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_l_2",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Left",
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_t_2",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Top",
          "default": 50
        },
        {
          "type": "header",
          "content": "Product 3"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "Product 3",
          "info": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_l_3",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Left",
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_t_3",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Top",
          "default": 50
        }
      ]
    }
  ]
}
{% endschema %}
