{% comment %}
    {{ 'template-collection.css' | asset_url | stylesheet_tag }}
    {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
    {{ 'component-card.css' | asset_url | stylesheet_tag }}
    {{ 'component-price.css' | asset_url | stylesheet_tag }}


  {% if section.settings.image_shape == 'blob' %}
    {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- if section.settings.enable_quick_add -%}
    {{ 'quick-add.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
{% endcomment %}

{% liquid
  assign productsPerPage = section.settings.products_per
  assign collectionProducts = collection
  assign hideViewToggle = collection.metafields.custom.hide_view_toggle.value
  assign indexCount = 0
%}
{% comment %}QT 18-7-2024{% endcomment %}
<style>
   .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
    .selected-filters {
      display: flex;
      padding: 10px;
  }
  .selected-filter {
    display: flex;
    align-items: center;
    padding: 5px;
    height: 45px;
    border-radius: 4px;
    background-color: rgb(249 249 249);
    margin: 2px 2px;

  }
  .remove-filter {
    background: none;
    border: none;
    color: #2c3b96;
    font-size: 30px;
   margin-right: 10px; 
    cursor: pointer;
  }
  .selected-filters-btn{
display:flex;
  }
      .qt-sorting-btn button {
        background-color: white;
        display: flex;
        align-items: left;
      }
     
      .product-grid-filter {
        display: flex;
        justify-content: space-between;
      }

      .qt-btn-wrapper {
      }
      .qt-btn {
        color: #2c3b96;
        {% comment %} padding: 0.5rem 1rem; {% endcomment %}
        font-weight:500;
        border-radius: 0.25rem;
        cursor: pointer;
        display: block;
        align-items: center;
        background-origin: content-box;
      }

      .qt-btn > img {
        display: inline-block;
        color: #2c3b96;
        margin-left: 4px;
        margin-bottom:3px;
        vertical-align: middle;
        width: 14px;
        height: 14px;
      }
      .qt-dropdown-menu {
        display: none;
        position: absolute;
        background-color: #fff;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1;
        width: auto;
      }

      .qt-dropdown-menu.show {
        display: block;
        width: 270px;
        margin-top:10px;
      }
      .qt-dropdown-item {
        display: block;
        padding: 10px;
        text-decoration: none;
        color: #333;
        transition: background-color 0.3s;
        padding-top: 1.25rem;
        padding-left: 1.25rem;
        padding-bottom: 1.25rem;
        font-weight: 500;
        color: #2c3b96;
        background-image: url({{ 'plus.svg' | asset_url }});
        background-repeat: no-repeat;
        background-position-x: right;
        background-position-y: center;
        background-origin: content-box;
      }
      .qt-dropdown-item.open {
        background-image: url({{ 'minus.svg' | asset_url}});
        background-repeat: no-repeat;
        background-position-x: right;
        background-position-y: center;
      }
      .qt-dropdown-item:hover {
        background-color: #f2f2f2;
      }
    .qt-sorting-btn{
    }
      .qt-sortby-dropdown-menu {
        display: none; /* Hidden by default */
        position: absolute;
        background-color: #fff;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        z-index: 1; /* Ensure it sits above other content */
        width: auto;
      }

      .qt-sortby-dropdown-menu.show {
        display: block; /* Show when toggled */
        width: 270px; /* Set the width of the dropdown */
      }

      .qt-sortby-dropdown-item {
        display: block;
        padding: 10px;
        text-decoration: none;
        color: #2c3b96; /* Text color */
        transition: background-color 0.3s;
        font-weight: 500;
        background-color: #fff; /* Background color */
        background-image: none; /* No background image for sort items */
      }

      .qt-sortby-dropdown-item:hover {
        background-color: #f2f2f2; /* Background color on hover */
      }
      .qt-accordion-item-box {
        display: none;
        padding-left: 2.25rem;
        {% comment %} overflow-y: auto;
        max-height: 100px; {% endcomment %}
      }
      .qt-accordion-item-box.show {
        display: block;
        padding-left: 1.25rem;
      }
      input[type='checkbox'] {
        margin-right: 5px;
      }
      .qt-towel-seo-content-excerpt {
        font-size: inherit;
        font-family: inherit;
        font-weight: inherit;
      }
      .qt-towel-seo-content-full {
        padding: 1rem 0;

        overflow: hidden;
      }
      .qt-towel-seo-content-full.expanded {
        height: auto;
      }
      .qt-seo-towel-excerpt {
        margin: auto;
        max-width: 1350px;
         margin-top:40px;
        margin-bottom:40px; 
      }
      .qt-toggle-content {
        margin-top: 10px;
      }

      .qt-toggle-link {
        color: rgb(44 59 150);
        text-decoration: underline;
        cursor: pointer;
        display: inline-block;
        margin-top: 10px;
      }
      .qt-towel-seo-content-title {
        {% comment %} margin-top: 40px; {% endcomment %}
      }
      .mobile-only {
        display: none;
      }
      .close-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 24px;
  border: none;
  display:none;
  background: none;
  color: #333;
  cursor: pointer;
  z-index: 2;
}

      @media only screen and (min-width: 769px) and (max-width: 1023px) {
        #product-grid {
          grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
        } 
      }
      @media only screen and (max-width: 300) {
        #product-grid {
          grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
        } 
      }
      @media (max-width: 1400px) {
        .qt-seo-towel-excerpt {
          margin: 0px 40px;
          margin-top:40px;
          margin-bottom:40px; 
        }
      }
      @media (max-width: 768px) {
        .selected-filters-btn{
          display:block;
            }
        .qt-dropdown-item{
          margin:30px;
        }
        .product-grid-filter {
         /* margin: 0px 40px;*/
          display:block;
        }
        .qt-sorting-btn button {
          width: 100%;
          display:block;
          text-align: center;
          border:1px solid #2c3b96;
          border-radius:0.25rem;
        }
        .qt-sorting-btn label {
          margin-left: -15px !important; 
        }
        .qt-sorting-btn .facet-filters_sort {
          text-align: center !important;
        }
        .qt-towel-seo-liner {
          margin-bottom: 20px;
          text-align: center;
        }
        .qt-towel-seo-title {
          margin-top: 20px;
          text-align: center;
        }
        .qt-towel-seo-content-title {
          text-align: center;
        }
        .qt-towel-seo-content-excerpt {
          font-size: inherit;
          font-family: inherit;
          font-weight: inherit;
          text-align: justify;
          margin-top: 20px;
        }
        .qt-seo-towel-excerpt {
          margin: 0px 40px;
          margin-top:40px;
          margin-bottom:40px; 
        }
        .qt-toggle-link {
          text-align: center;
        }
        .qt-btn.qt-filter-button {
          display: block;
          width:100% !important;
          text-align: center !important;
          background: border-box;
          border:1px solid #2c3b96;
          
        }
        .qt-filter-button label{
          margin-left:-25px;
        }
        .qt-btn {
          text-align: center;
          padding: 0.5rem 1rem;
        }
        .qt-dropdown-menu {
          position: fixed;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          background-color: #fff;
          overflow-y: auto;
          transform: translateY(-100%);
          transition: transform 0.3s ease;
          z-index: 1000;
        }

        .qt-dropdown-menu.show {
            transform: translateY(0);
          width:100%;
          font-size: medium;
        }

        .qt-btn.qt-filter-button.hidden {
          width:100%;
        }
        .filter-buttons {
          position: sticky;
          bottom: 10px;
          left: 0;
          width: 100%;
          background-color: #fff;
          border-top: 1px solid #ddd;
          z-index: 1000; /* Ensure it stays above other content */
          padding: 0 3rem;
        }
        .filter-buttons button {
          margin:10px;
          margin-left: 20px;
          border: 1px solid #2c3b96;
        }
        .mobile-only {
          display: flex;
          justify-content: space-between;
        }
        .close-btn {
          display:block;
        }
      }
</style>
{% comment %}
  <div style="display:none">
    {% render 'filters', results: collection, enable_sorting: section.settings.enable_filtering %}
  </div>
{% endcomment %}

<div
  id="prodlist"
  data-hidetoggle="{{ hideViewToggle }}"
  class="section-{{ section.id }}-padding group/prodlist [&.list_ul#product-grid>li:nth-child(6n+3)]:col-span-2 [&.list_ul#product-grid>li:nth-child(6n+4)]:col-span-2 "
>
  {%- paginate collection.products by productsPerPage -%}
    <nav id="breadcrumbs" class="breadcrumb container mt-10 mb-12 max-md:hidden">
      <ul class="flex flex-wrap text-blue-1 gap-1">
        {% assign collectionsCount = product.collections.size %}
        <li>
          <a href="{{ shop.url }}">Home</a>
        </li>

        {%- assign parent_collection = collection.metafields.custom.parent_collection.value %}
        {%- if parent_collection != blank %}
          <li>/</li>

          <li>
            <a href="{{ parent_collection.url }}">{{ parent_collection.title }}</a>
          </li>
        {%- endif -%}

        <li>/</li>

        <li>
          <a href="{{ collection.url }}">{{ collection.title }}</a>
        </li>

        {%- for filter in collection.filters -%}
          {% if filter.param_name == 'filter.p.tag' %}
            {%- for value in filter.values -%}
              {% if value.active %}
                <li>/</li>
                <li>
                  <strong>{{ value.label }}</strong>
                </li>
              {% endif %}
            {%- endfor -%}
            {% break %}
          {% endif %}
        {%- endfor %}
      </ul>
    </nav>

    <header class="flex items-center justify-center flex-col container">
      {% assign alt_title = collection.metafields.custom.alternative_collection_title %}
      {% if alt_title != blank %}
        <h1 class="s-m-h4 lg:s-d-h3">{{ alt_title.value }}</h1>
      {% else -%}
        <h1 class="s-m-h4 lg:s-d-h3 qt-towel-seo-title">{{ collection.title }}</h1>
      {% endif %}

      <p class="qt-towel-seo-liner" style="margin-top:20px;">{{ collection.metafields.custom.seo_1_liner }}</p>
      {% comment %} {% echo collection.metafields.custom | json %} {% endcomment %}
      {% comment %}
        <div>
          {% render 'facets-drawer',
            results: collection,
            enable_filtering: section.settings.enable_filtering,
            enable_sorting: section.settings.enable_sorting,
            filter_type: section.settings.filter_type,
            paginate: paginate
          %}
        </div>
      {% endcomment %}
    </header>

    {% assign has_sub_collections = false %}
    {% for block in section.blocks -%}
      {% case block.type %}
        {% when 'sub_collections' %}
          {% if has_sub_collections == false %}
            {% assign has_sub_collections = true %}
            {% break %}
          {% endif %}
      {% endcase %}
    {% endfor %}

    {% if has_sub_collections %}
      {% render 'sub-collection-carousel', blocks: section.blocks %}
    {% endif %}

    {%- if collection.products.size > 0 -%}
      <aside
        aria-labelledby="verticalTitle"
        class="relative md:sticky md:top-0 z-10 bg-white/95 max-md:overflow-hidden md:overflow-x-clip"
        id="main-collection-filters"
        data-id="{{ section.id }}"
      >
        {% render 'facets',
          results_request: request,
          results: collection,
          enable_filtering: section.settings.enable_filtering,
          enable_sorting: section.settings.enable_sorting,
          filter_type: section.settings.filter_type,
          paginate: paginate,
          collection_list: collection.metafields.custom.children_collections,
          has_sub_collections: has_sub_collections
        %}
      </aside>
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {% endif %}

    <div class="">
      {% render 'product-filter' %}

      <div
        class="product-grid-container mt-5 lg:mt-12"
        id="ProductGridContainer"
        
      >
        {%- if collection.products.size == 0 -%}
          <div
            class="collection collection--empty container [&.loading]:opacity-50  transition-opacity"
            id="product-grid"
            data-id="{{ section.id }}"
          >
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="m-h2 d-h2">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underline'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div id="collection-products" class="collection container [&.loading]:opacity-50  transition-opacity">
            <div class="loading-overlay gradient"></div>

            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 sm:grid-cols-1 max-sm:grid-cols-1 gap-4 gap-y-10 grid-flow-dense"
            >
              {% assign listscIndex = 0 %}
              {% assign infoContentBlock = collection.metafields.custom.info_content_block.value %}

              {% assign listscCount = 0 %}
              {% assign pagOffset = paginate.current_page | times: productsPerPage %}

              {% assign pagOffset = pagOffset | minus: productsPerPage %}

              {% assign infoCardCount = 0 %}

              {%- for product in collection.products -%}
                {% assign indexCount = indexCount | plus: 1 %}
                {% if product.handle contains 'docapp-free-gift-' %}{% continue %}{% endif %}

                {% if product.type == 'giftbox_ghost_product' %}{% continue %}{% endif %}
                {% assign mainLoopIndexOffset = forloop.index0 | plus: pagOffset %}
                {% assign productInd = forloop.index0 %}
                {% assign colSpanSet = false %}

                {% assign lazy_load = false %}
                {%- if forloop.index > 4 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}

                {% for block in collection.metafields.custom.info_content_block.value %}
                  {% comment %} {% echo block.position %} {% endcomment %}
                  {% if block.position == indexCount %} 
                    {% render 'info-content-block', block: block %} 
                    {% assign indexCount = indexCount | plus: 1 %}
                 {% endif %}
                {% endfor %}
                {% for block in collection.metafields.custom.info_content_fullwidth_block.value %}
                  {% comment %} {% echo block.position %}  {% endcomment %}
                  {% if block.position == indexCount %}
                    {% render 'info-content-block-fullwidth', block: block %}
                    {% assign indexCount = indexCount | plus: 1 %}
                 {% endif %}
                {% endfor %} 
                
                {% capture prodBlocks %}
                {% for block in section.blocks -%}
                  {% case block.type %}
                    {% when 'listsc' %}
                      {% if productInd == 1 or productInd == 2 %}
                        {% if forloop.index > listscIndex %}
                          {% render 'product-list-showcase',
                            block: block,
                            bgImage: block.settings.image,
                            product_1: block.settings.product_1,
                            pos_l_1: block.settings.pos_l_1,
                            pos_t_1: block.settings.pos_t_1,
                            product_2: block.settings.product_2,
                            pos_l_2: block.settings.pos_l_2,
                            pos_t_2: block.settings.pos_t_2,
                            product_3: block.settings.product_3,
                            pos_l_3: block.settings.pos_l_3,
                            pos_t_3: block.settings.pos_t_3,
                            availableProds: collectionProducts
                          %}
                          {% assign listscIndex = forloop.index %}
                          {% assign colSpanSet = true %}
                          {% assign listscCount = listscCount | plus: 1%}
                        {% endif %}
                      {% endif %}
                    {% when 'infocard' %}
                      {% assign position = block.settings.position | minus: 2 %}
                      {% if position == mainLoopIndexOffset %}
                        <li
                          class="{% unless request.design_mode %}animate-fadeinup{% endunless %} max-md:py-6 max-md:col-span-2 view-grid-only {% if infoCardCount == 0 %}max-md:row-start-3{% endif %} {% if infoCardCount == 1 %}max-md:hidden{% endif %}"
                          {{ block.shopify_attributes }}
                        >
                          {% render 'card-info',
                            title: block.settings.text,
                            copy: block.settings.copy,
                            button_text: block.settings.button_text,
                            button_url: block.settings.button_url,
                            styled: block.settings.styled
                          %}
                        </li>
                        {% assign infoCardCount = infoCardCount | plus: 1 %}
                      {% endif %}
                  {% endcase %}
                {% endfor %}
                {% endcapture %}

                {% assign prodClass = '' %}

                <li
                  class="{% unless request.design_mode %}animate-fadeinup{% endunless %} grid__item {{ prodClass }} group-[.list]/prodlist:max-sm:col-span-full"
                >
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    show_quick_add: section.settings.enable_quick_add,
                    section_id: section.id
                  %}
                </li>

                {{ prodBlocks }}
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > paginate.current_page -%}
              <button
                class="flex space-x-2 items-center my-10 lg:my-20 mx-auto [&.loading>div]:!block"
                onclick="loadMoreProducts(this)"
                id="show-more"
                data-page="{{ paginate.current_page | plus: 1 }}"
              >
                <span class="btn-tertiary">Show More</span> {% render 'more-chev-down' %}

                <div class="loading-overlay__spinner hidden">
                  <svg
                    aria-hidden="true"
                    focusable="false"
                    class="spinner"
                    viewBox="0 0 66 66"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <circle class="path !stroke-current" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                  </svg>
                </div>
              </button>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}
</div>

<script>
      function initReviews() {
        if (ratingSnippet !== undefined)
          ratingSnippet('ruk_rating_snippet', {
            store: 'www.christy.co.uk',
            mode: 'default',
            color: '#2c3b96',
            linebreak: false,
            text: 'Reviews',
            singularText: 'Review',
            lang: 'en',
            usePolaris: true,
            showEmptyStars: false,
          });
      }
      function sectionProductGridInit() {
        // view toggle

        // if local storage has product list set, show list view
        const prodList = document.querySelector('#prodlist');
        const viewToggle = document.querySelector('#view-toggle');
        const viewToggleMob = document.querySelector('#view-toggle-mob');
        const FacetFiltersForm = document.querySelector('#FacetFiltersForm');

        const prodlistView = localStorage.getItem('prodlistView');
        if (prodlistView == 'true' && prodlist.dataset.hidetoggle != 'true') {
          viewToggle.classList.add('list');
          viewToggleMob.classList.add('list');
          prodList.classList.add('list');

          document.querySelector('[name="view"][value="list"]').checked = true;

          document
            .getElementById('ProductGridContainer')
            .querySelectorAll('.view-grid-only')
            .forEach((element) => {
              element.remove();
            });
        } else {
          document
            .getElementById('ProductGridContainer')
            .querySelectorAll('.view-list-only')
            .forEach((element) => {
              element.remove();
            });
        }

        function viewToggleHandler() {
          let checkedView = document.querySelector('[name="view"]:checked').value;

          if (checkedView == 'list') {
            localStorage.setItem('prodlistView', true);
            viewToggle.classList.add('list');
            viewToggleMob.classList.add('list');
          } else {
            localStorage.setItem('prodlistView', false);
            viewToggle.classList.remove('list');
            viewToggleMob.classList.remove('list');
          }
        }
        FacetFiltersForm.addEventListener('input', function () {
          viewToggleHandler();
        });

        if (viewToggleMob) {
          viewToggleMob.querySelectorAll('label').forEach(function (el) {
            el.addEventListener('click', function () {
              let forName = el.getAttribute('for');
              console.log(document.getElementById(forName));
              document.getElementById(forName).click();
            });
          });
        }

        document.querySelectorAll('[name="shop_by"]').forEach(function (el) {
          el.addEventListener('change', function () {
            el.closest('.shop_by').classList.remove('tag', 'collection', 'default');
            el.closest('.shop_by').classList.add(el.value);

            let checks = document.querySelectorAll('[name="filter.p.product_type"], [name="filter.p.tag"]');
            checks.forEach(function (check) {
              check.checked = false;
            });
          });
        });
      }

      function changeListImgSrcset() {
        let els = document.querySelectorAll(
          '#prodlist.list #product-grid>li:nth-child(6n+3),#prodlist.list #product-grid>li:nth-child(6n+4), #prodlist.list #product-grid>li:nth-child(6n+4)'
        );

        if (els.length) {
          els.forEach(function (el) {
            let imgs = el.querySelectorAll('.card__inner > a > img');
            if (imgs.length) {
              imgs.forEach(function (img, i) {
                img.setAttribute('sizes', '(max-width: 1023px) 50vw, (min-width: 1024px) 668px, 100vw');

                if (i == 0) {
                  img.style.objectFit = 'cover';
                }
              });
            }
          });
        }
      }

      document.addEventListener('DOMContentLoaded', function () {
        sectionProductGridInit();

        const viewToggleMob = document.querySelector('#view-toggle-mob');
        const viewToggle = document.querySelector('#view-toggle');
        const filtersMob = document.querySelector('#filters-mob');
        const menuDrawer = document.querySelector('#prodlist menu-drawer summary');

        filtersMob.addEventListener('click', function (e) {
          e.preventDefault();
          menuDrawer.click();
        });

        if (viewToggleMob) {
          viewToggleMob.addEventListener('click', function (e) {
            e.preventDefault();
            viewToggle.click();
          });
        }
      });

      document.addEventListener('shopify:section:load', function (event) {
        sectionProductGridInit();
      });

    {% comment %}QT 19-7-2024{% endcomment %}
    function openAccordion(element) {
      var accordionId = element.getAttribute('data-id');
      var accordionContent = document.getElementById(accordionId);

      // Toggle visibility of the accordion content
      if (accordionContent.style.display === 'block') {
       // console.log(accordionBtn, typeof accordionBtn.click )

          accordionContent.style.display = 'none';
          element.classList.remove('open'); // Remove 'open' class to change icon to plus

      } else {
          // Close all other open accordion items
          var allAccordions = document.querySelectorAll('.qt-dropdown-item');
          allAccordions.forEach(function(item) {
              if (item !== element) {
                  var otherAccordionId = item.getAttribute('data-id');
                  var otherAccordionContent = document.getElementById(otherAccordionId);
                  otherAccordionContent.style.display = 'none';
                  item.classList.remove('open');
              }
          });

          accordionContent.style.display = 'block';
          element.classList.add('open'); // Add 'open' class to change icon to minus

      }
  }
      let showMoreBtn = document.querySelector('#show-more');
      let showMoreBtnTop;

      function getShowBtnTop() {
        if (showMoreBtn) {
          showMoreBtnTop = showMoreBtn.getBoundingClientRect().top + window.scrollY;
        }
      }
      getShowBtnTop();

      window.addEventListener('scroll', function () {
        if (showMoreBtn) {
          if (
            window.scrollY > showMoreBtnTop - window.innerHeight &&
            !showMoreBtn.classList.contains('loading') &&
            document.querySelector('#show-more')
          ) {
            loadMoreProducts(showMoreBtn);
          }
        }
      });

      function loadMoreProducts(el) {
        var collectionProducts = document.getElementById('collection-products');
        var productListing = document.getElementById('product-grid');

        el.classList.add('loading');

        var requestUrl =
          window.location.pathname + window.location.search + '?limit={{ productsPerPage }}&page=' + el.dataset.page;

        //history.pushState(requestUrl, '', requestUrl);
        fetch(requestUrl)
          .then((response) => response.text())
          .then(function (responseText) {
            const html = new DOMParser().parseFromString(responseText, 'text/html');
            html.querySelectorAll('.info-content-block').forEach((el) => {
              el.remove();
            });
            const productHtml = html.querySelector('#product-grid');
            if (productHtml && productHtml.querySelectorAll('.grid__item').length > 0) {
              productListing.insertAdjacentHTML('beforeend', productHtml.innerHTML);

              // lazy load
              const lazyimg = new Event('lazyimg');
              window.dispatchEvent(lazyimg);

              // reinit colour selectors
              const initcolourselector = new Event('initcolourselector');
              window.dispatchEvent(initcolourselector);

              el.classList.remove('loading');
            }

            if (html.querySelector('#show-more')) {
              el.dataset.page = html.querySelector('#show-more').dataset.page;
            } else {
              el.remove();
            }

            getShowBtnTop();
            initReviews();
          })
          .catch(function (error) {
            console.error('Error loading products:', error);
          });
      }
</script>

{% comment %}QT 25-7-2024{% endcomment %}

{% if collection.metafields.custom.seo_content_excerpt or collection.metafields.custom.seo_content_full %}
  <div class="qt-seo-towel-excerpt">
    {% if collection.metafields.custom.seo_content_excerpt %}
      <h1 class="s-m-h4 lg:s-d-h3 qt-towel-seo-content-title">{{ collection.title }}</h1>
      <h2 class="qt-towel-seo-content-excerpt" id="excerpt-content">
        {{ collection.metafields.custom.seo_content_excerpt | metafield_tag }}
      </h2>
    {% endif %}

    {% if collection.metafields.custom.seo_content_full %}
      <div class="qt-towel-seo-content">
        <div class="qt-towel-seo-content-full" id="full-content" style="display: none;">
          {{ collection.metafields.custom.seo_content_full | metafield_tag }}
        </div>
        <a class="qt-toggle-link" id="toggle-link" href="javascript:void(0);">Read more...</a>
      </div>
    {% endif %}
  </div>
{% endif %}


<script>
  document.addEventListener('DOMContentLoaded', function () {
    const toggleLink = document.getElementById('toggle-link');
    const fullContent = document.getElementById('full-content');

    toggleLink.addEventListener('click', function () {
      if (fullContent.style.display === 'none') {
        fullContent.style.display = 'block';
        toggleLink.textContent = 'Read less...';
      } else {
        fullContent.style.display = 'none';
        toggleLink.textContent = 'Read more...';
      }
    });
  });
</script>
{% schema %}
{
  "name": "Products",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per",
      "min": 4,
      "max": 24,
      "step": 1,
      "label": "Products Per Page",
      "default": 12
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    }
  ],

  "blocks": [
    {
      "type": "sub_collections",
      "name": "Sub Col. Carousel Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "sub_title",
          "label": "Sub Title"
        },
        {
          "type": "richtext",
          "id": "copy",
          "label": "Copy"
        },

        {
          "type": "url",
          "id": "button_url",
          "label": "Button URL"
        }
      ]
    },
    {
      "type": "infocard",
      "name": "GRID - Product Info Card",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "copy",
          "label": "Copy"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "Button URL"
        },
        {
          "type": "checkbox",
          "id": "styled",
          "label": "Styled Heading"
        },
        {
          "type": "number",
          "id": "position",
          "label": "List Position"
        }
      ]
    },
    {
      "type": "listsc",
      "name": "LIST - Showcase",
      "limit": 2,
      "settings": [
        {
          "type": "header",
          "content": "An image, with product hotspots."
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Showcase Background Image",
          "info": "This image sits behind overlaid Product Hotspots"
        },
        {
          "type": "header",
          "content": "Product 1"
        },
        {
          "type": "product",
          "id": "product_1",
          "label": "Product 1",
          "info": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_l_1",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Left",
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_t_1",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Top",
          "default": 50
        },
        {
          "type": "header",
          "content": "Product 2"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "Product 2",
          "info": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_l_2",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Left",
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_t_2",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Top",
          "default": 50
        },
        {
          "type": "header",
          "content": "Product 3"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "Product 3",
          "info": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_l_3",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Left",
          "default": 50
        },
        {
          "type": "range",
          "id": "pos_t_3",
          "min": 10,
          "max": 90,
          "step": 5,
          "unit": "%",
          "label": "Position Top",
          "default": 50
        }
      ]
    }
  ]
}
{% endschema %}

{% comment %}QT 13/07/2024{% endcomment %}
 {% render 'quickview-drawer' -%} 
