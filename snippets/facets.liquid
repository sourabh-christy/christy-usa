{% comment %}
  Renders facets (filtering and sorting)

  Accepts:
  - results: {Object} Collection or Search object
  - enable_filtering: {Boolean} Show filtering when true
  - enable_sorting: {Boolean} Show sorting when true
  - filter_type: {String} Type of filter
  - paginate: {Object}

  Usage:
  {% render 'facets', results: collection, enable_filtering: true, enable_sorting: true, filter_type: 'vertical', paginate: paginate %}
{% endcomment %}

{{ 'component-show-more.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign hideViewToggle = collection.metafields.custom.hide_view_toggle.value

  assign sort_by = results.sort_by | default: results.default_sort_by
  assign total_active_values = 0
  if results.url
    assign results_url = results.url
  else
    assign terms = results.terms | escape
    assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
  endif
-%}

{% assign collection_list = collection_list.value %}

{% comment %}
  if parent collection is selected, get the children collection_list of parent
{% endcomment %}
{%- assign parent_collection = collection.metafields.custom.parent_collection.value %}

{%- if parent_collection != blank -%}
  {%- assign collection_list = parent_collection.metafields.custom.children_collections.value -%}
{% endif %}

<script>
  // Get the current URL
  let shop_by_switcher = document.getElementById('shop_by_switcher');
  let url = new URL(window.location.href);
  // Get the tag attribute from the URL query parameters
  let tag = url.searchParams.get('shop_by');

  // Check if the tag attribute exists
  if (tag) {
    // The URL contains the tag attribute
    if (shop_by_switcher) {
      shop_by_switcher.classList.remove('collection', 'tag');
      shop_by_switcher.classList.add(tag);

      if (document.querySelector('[name="shop_by"][value="' + tag + '"]')) {
        document.querySelector('[name="shop_by"][value="' + tag + '"]').checked = true;
      }
    }
  }
</script>
